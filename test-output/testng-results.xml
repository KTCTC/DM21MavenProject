<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="11" ignored="6" total="39" passed="21">
  <reporter-output>
  </reporter-output>
  <suite name="BankingApplicationAutomationSuite" duration-ms="40298" started-at="2022-05-04T09:25:26 IST" finished-at="2022-05-04T09:26:06 IST">
    <groups>
    </groups>
    <test name="Regression" duration-ms="17839" started-at="2022-05-04T09:25:26 IST" finished-at="2022-05-04T09:25:44 IST">
      <class name="invocation.InvocationInTestNG">
        <test-method status="PASS" signature="sampleTestCase()[pri:0, instance:invocation.InvocationInTestNG@4232c52b]" name="sampleTestCase" duration-ms="4" started-at="2022-05-04T09:25:26 IST" finished-at="2022-05-04T09:25:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sampleTestCase -->
        <test-method status="PASS" signature="sampleTestCase()[pri:0, instance:invocation.InvocationInTestNG@4232c52b]" name="sampleTestCase" duration-ms="1" started-at="2022-05-04T09:25:26 IST" finished-at="2022-05-04T09:25:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sampleTestCase -->
        <test-method status="FAIL" signature="sampleTestCase()[pri:0, instance:invocation.InvocationInTestNG@4232c52b]" name="sampleTestCase" duration-ms="2" started-at="2022-05-04T09:25:26 IST" finished-at="2022-05-04T09:25:26 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at invocation.InvocationInTestNG.sampleTestCase(InvocationInTestNG.java:16)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sampleTestCase -->
        <test-method status="PASS" signature="sampleTestCase()[pri:0, instance:invocation.InvocationInTestNG@4232c52b]" name="sampleTestCase" duration-ms="14" started-at="2022-05-04T09:25:26 IST" finished-at="2022-05-04T09:25:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sampleTestCase -->
        <test-method status="PASS" signature="sampleTestCase()[pri:0, instance:invocation.InvocationInTestNG@4232c52b]" name="sampleTestCase" duration-ms="9" started-at="2022-05-04T09:25:26 IST" finished-at="2022-05-04T09:25:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sampleTestCase -->
      </class> <!-- invocation.InvocationInTestNG -->
      <class name="enable.EnabledInTestNG">
        <test-method status="FAIL" signature="A()[pri:0, instance:enable.EnabledInTestNG@4493d195]" name="A" duration-ms="23" started-at="2022-05-04T09:25:26 IST" finished-at="2022-05-04T09:25:26 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [450] but found [450]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [450] but found [450]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failEquals(Assert.java:1041)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:147)
at org.testng.Assert.assertNotEquals(Assert.java:1531)
at org.testng.Assert.assertNotEquals(Assert.java:1535)
at enable.EnabledInTestNG.A(EnabledInTestNG.java:31)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- A -->
        <test-method status="FAIL" signature="B()[pri:0, instance:enable.EnabledInTestNG@4493d195]" name="B" duration-ms="13" started-at="2022-05-04T09:25:26 IST" finished-at="2022-05-04T09:25:26 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[User is displayed after deletion expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: User is displayed after deletion expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertFalse(Assert.java:67)
at enable.EnabledInTestNG.B(EnabledInTestNG.java:15)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- B -->
      </class> <!-- enable.EnabledInTestNG -->
      <class name="annotations.AnnotationsTestNG">
        <test-method status="PASS" signature="beforeTestAnnotation()[pri:0, instance:annotations.AnnotationsTestNG@536aaa8d]" name="beforeTestAnnotation" is-config="true" duration-ms="0" started-at="2022-05-04T09:25:26 IST" finished-at="2022-05-04T09:25:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestAnnotation -->
        <test-method status="PASS" signature="beforeClassAnnotation()[pri:0, instance:annotations.AnnotationsTestNG@536aaa8d]" name="beforeClassAnnotation" is-config="true" duration-ms="0" started-at="2022-05-04T09:25:26 IST" finished-at="2022-05-04T09:25:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassAnnotation -->
        <test-method status="PASS" signature="beforeMethodAnnotation()[pri:0, instance:annotations.AnnotationsTestNG@536aaa8d]" name="beforeMethodAnnotation" is-config="true" duration-ms="1" started-at="2022-05-04T09:25:26 IST" finished-at="2022-05-04T09:25:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodAnnotation -->
        <test-method status="PASS" signature="A()[pri:0, instance:annotations.AnnotationsTestNG@536aaa8d]" name="A" duration-ms="7" started-at="2022-05-04T09:25:26 IST" finished-at="2022-05-04T09:25:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- A -->
        <test-method status="PASS" signature="afterMethodAnnotation()[pri:0, instance:annotations.AnnotationsTestNG@536aaa8d]" name="afterMethodAnnotation" is-config="true" duration-ms="0" started-at="2022-05-04T09:25:26 IST" finished-at="2022-05-04T09:25:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodAnnotation -->
        <test-method status="PASS" signature="beforeMethodAnnotation()[pri:0, instance:annotations.AnnotationsTestNG@536aaa8d]" name="beforeMethodAnnotation" is-config="true" duration-ms="1" started-at="2022-05-04T09:25:26 IST" finished-at="2022-05-04T09:25:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodAnnotation -->
        <test-method status="PASS" signature="B()[pri:0, instance:annotations.AnnotationsTestNG@536aaa8d]" name="B" duration-ms="7" started-at="2022-05-04T09:25:26 IST" finished-at="2022-05-04T09:25:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- B -->
        <test-method status="PASS" signature="afterMethodAnnotation()[pri:0, instance:annotations.AnnotationsTestNG@536aaa8d]" name="afterMethodAnnotation" is-config="true" duration-ms="1" started-at="2022-05-04T09:25:26 IST" finished-at="2022-05-04T09:25:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodAnnotation -->
        <test-method status="PASS" signature="verifyUserCanUploadFile()[pri:0, instance:annotations.AnnotationsTestNG@536aaa8d]" name="verifyUserCanUploadFile" duration-ms="2" started-at="2022-05-04T09:25:26 IST" finished-at="2022-05-04T09:25:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanUploadFile -->
        <test-method status="PASS" signature="beforeMethodAnnotation()[pri:0, instance:annotations.AnnotationsTestNG@536aaa8d]" name="beforeMethodAnnotation" is-config="true" duration-ms="0" started-at="2022-05-04T09:25:26 IST" finished-at="2022-05-04T09:25:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodAnnotation -->
        <test-method status="PASS" signature="afterMethodAnnotation()[pri:0, instance:annotations.AnnotationsTestNG@536aaa8d]" name="afterMethodAnnotation" is-config="true" duration-ms="1" started-at="2022-05-04T09:25:26 IST" finished-at="2022-05-04T09:25:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodAnnotation -->
        <test-method status="PASS" signature="afterClassAnnotation()[pri:0, instance:annotations.AnnotationsTestNG@536aaa8d]" name="afterClassAnnotation" is-config="true" duration-ms="1" started-at="2022-05-04T09:25:26 IST" finished-at="2022-05-04T09:25:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassAnnotation -->
        <test-method status="PASS" signature="afterTestAnnotation()[pri:0, instance:annotations.AnnotationsTestNG@536aaa8d]" name="afterTestAnnotation" is-config="true" duration-ms="7" started-at="2022-05-04T09:25:44 IST" finished-at="2022-05-04T09:25:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTestAnnotation -->
      </class> <!-- annotations.AnnotationsTestNG -->
      <class name="priority.PriorityInTestNG">
        <test-method status="PASS" signature="A()[pri:2, instance:priority.PriorityInTestNG@1877ab81]" name="A" duration-ms="3" started-at="2022-05-04T09:25:27 IST" finished-at="2022-05-04T09:25:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- A -->
        <test-method status="PASS" signature="verifyUserCanUploadFile()[pri:3, instance:priority.PriorityInTestNG@1877ab81]" name="verifyUserCanUploadFile" duration-ms="9" started-at="2022-05-04T09:25:27 IST" finished-at="2022-05-04T09:25:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanUploadFile -->
        <test-method status="PASS" signature="B()[pri:-20, instance:priority.PriorityInTestNG@1877ab81]" name="B" duration-ms="9" started-at="2022-05-04T09:25:27 IST" depends-on-methods="priority.PriorityInTestNG.A" finished-at="2022-05-04T09:25:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- B -->
      </class> <!-- priority.PriorityInTestNG -->
      <class name="brockenlink.BrockenLinkClass">
        <test-method status="PASS" signature="verifyURLIsBrockenOrNot()[pri:0, instance:brockenlink.BrockenLinkClass@57e1b0c]" name="verifyURLIsBrockenOrNot" duration-ms="2089" started-at="2022-05-04T09:25:26 IST" finished-at="2022-05-04T09:25:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyURLIsBrockenOrNot -->
      </class> <!-- brockenlink.BrockenLinkClass -->
      <class name="dataprovider.DataProviderInTestNG">
        <test-method status="PASS" signature="addNewUserInSystem(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:dataprovider.DataProviderInTestNG@704a52ec]" name="addNewUserInSystem" duration-ms="60" started-at="2022-05-04T09:25:26 IST" data-provider="UserDetails" finished-at="2022-05-04T09:25:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Amit]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[patil]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[amit@patil.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[23]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[34567]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[IT]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNewUserInSystem -->
        <test-method status="PASS" signature="addNewUserInSystem(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:dataprovider.DataProviderInTestNG@704a52ec]" name="addNewUserInSystem" duration-ms="9" started-at="2022-05-04T09:25:26 IST" data-provider="UserDetails" finished-at="2022-05-04T09:25:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Amol]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pawar]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[amol@pawar.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[45]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[44567]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Software]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNewUserInSystem -->
      </class> <!-- dataprovider.DataProviderInTestNG -->
      <class name="assertion.SoftAssertionClass">
        <test-method status="FAIL" signature="A()[pri:0, instance:assertion.SoftAssertionClass@76f2b07d]" name="A" duration-ms="67" started-at="2022-05-04T09:25:26 IST" finished-at="2022-05-04T09:25:26 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [4500] but found [450],
did not expect [450] but found [450]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [4500] but found [450],
did not expect [450] but found [450]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at assertion.SoftAssertionClass.A(SoftAssertionClass.java:42)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- A -->
        <test-method status="FAIL" signature="B()[pri:0, instance:assertion.SoftAssertionClass@76f2b07d]" name="B" duration-ms="8" started-at="2022-05-04T09:25:26 IST" finished-at="2022-05-04T09:25:26 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
User is displayed after deletion expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
User is displayed after deletion expected [false] but found [true]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at assertion.SoftAssertionClass.B(SoftAssertionClass.java:24)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- B -->
        <test-method status="FAIL" signature="verifyUserCanUploadFile()[pri:0, instance:assertion.SoftAssertionClass@76f2b07d]" name="verifyUserCanUploadFile" duration-ms="7" started-at="2022-05-04T09:25:26 IST" finished-at="2022-05-04T09:25:26 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Object got initialized falsly expected [null] but found [ktctc.DM21MavenProject.FileUploadClass@28467807]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Object got initialized falsly expected [null] but found [ktctc.DM21MavenProject.FileUploadClass@28467807]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at assertion.SoftAssertionClass.verifyUserCanUploadFile(SoftAssertionClass.java:53)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanUploadFile -->
        <test-method status="PASS" signature="zTestCase()[pri:0, instance:assertion.SoftAssertionClass@76f2b07d]" name="zTestCase" duration-ms="17" started-at="2022-05-04T09:25:26 IST" finished-at="2022-05-04T09:25:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- zTestCase -->
      </class> <!-- assertion.SoftAssertionClass -->
      <class name="annotations.SampleAnnotationTestNG">
        <test-method status="PASS" signature="beforeClassAnnotation()[pri:0, instance:annotations.SampleAnnotationTestNG@e320068]" name="beforeClassAnnotation" is-config="true" duration-ms="11" started-at="2022-05-04T09:25:26 IST" finished-at="2022-05-04T09:25:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassAnnotation -->
        <test-method status="PASS" signature="beforeMethodAnnotation()[pri:0, instance:annotations.SampleAnnotationTestNG@e320068]" name="beforeMethodAnnotation" is-config="true" duration-ms="1" started-at="2022-05-04T09:25:26 IST" finished-at="2022-05-04T09:25:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodAnnotation -->
        <test-method status="PASS" signature="verifyUserCanLoginWithValiedCredentials()[pri:0, instance:annotations.SampleAnnotationTestNG@e320068]" name="verifyUserCanLoginWithValiedCredentials" duration-ms="9" started-at="2022-05-04T09:25:26 IST" finished-at="2022-05-04T09:25:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanLoginWithValiedCredentials -->
        <test-method status="PASS" signature="afterMethodAnnotation()[pri:0, instance:annotations.SampleAnnotationTestNG@e320068]" name="afterMethodAnnotation" is-config="true" duration-ms="4" started-at="2022-05-04T09:25:26 IST" finished-at="2022-05-04T09:25:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodAnnotation -->
        <test-method status="PASS" signature="verifyUserCanNotLoginWithInValiedCredentials()[pri:0, instance:annotations.SampleAnnotationTestNG@e320068]" name="verifyUserCanNotLoginWithInValiedCredentials" duration-ms="8" started-at="2022-05-04T09:25:27 IST" finished-at="2022-05-04T09:25:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanNotLoginWithInValiedCredentials -->
        <test-method status="PASS" signature="beforeMethodAnnotation()[pri:0, instance:annotations.SampleAnnotationTestNG@e320068]" name="beforeMethodAnnotation" is-config="true" duration-ms="0" started-at="2022-05-04T09:25:27 IST" finished-at="2022-05-04T09:25:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodAnnotation -->
        <test-method status="PASS" signature="afterMethodAnnotation()[pri:0, instance:annotations.SampleAnnotationTestNG@e320068]" name="afterMethodAnnotation" is-config="true" duration-ms="2" started-at="2022-05-04T09:25:27 IST" finished-at="2022-05-04T09:25:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodAnnotation -->
        <test-method status="PASS" signature="afterClassAnnotation()[pri:0, instance:annotations.SampleAnnotationTestNG@e320068]" name="afterClassAnnotation" is-config="true" duration-ms="2" started-at="2022-05-04T09:25:27 IST" finished-at="2022-05-04T09:25:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassAnnotation -->
      </class> <!-- annotations.SampleAnnotationTestNG -->
      <class name="dataprovider.DataProviderInTestNG2">
        <test-method status="PASS" signature="beforeClassMethod()[pri:0, instance:dataprovider.DataProviderInTestNG2@6ee52dcd]" name="beforeClassMethod" is-config="true" duration-ms="11632" started-at="2022-05-04T09:25:26 IST" finished-at="2022-05-04T09:25:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method status="PASS" signature="addNewUserInSystem(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:dataprovider.DataProviderInTestNG2@6ee52dcd]" name="addNewUserInSystem" duration-ms="2709" started-at="2022-05-04T09:25:38 IST" data-provider="UserDetails" finished-at="2022-05-04T09:25:41 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Amit]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[patil]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[amit@patil.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[23]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[34567]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[IT]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNewUserInSystem -->
        <test-method status="PASS" signature="addNewUserInSystem(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:dataprovider.DataProviderInTestNG2@6ee52dcd]" name="addNewUserInSystem" duration-ms="3296" started-at="2022-05-04T09:25:41 IST" data-provider="UserDetails" finished-at="2022-05-04T09:25:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Amol]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pawar]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[amol@pawar.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[45]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[44567]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Software]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNewUserInSystem -->
      </class> <!-- dataprovider.DataProviderInTestNG2 -->
      <class name="assertion.AssertionClass">
        <test-method status="FAIL" signature="A()[pri:0, instance:assertion.AssertionClass@1f57539]" name="A" duration-ms="23" started-at="2022-05-04T09:25:26 IST" finished-at="2022-05-04T09:25:26 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [450] but found [450]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [450] but found [450]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failEquals(Assert.java:1041)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:147)
at org.testng.Assert.assertNotEquals(Assert.java:1531)
at org.testng.Assert.assertNotEquals(Assert.java:1535)
at assertion.AssertionClass.A(AssertionClass.java:34)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- A -->
        <test-method status="FAIL" signature="B()[pri:0, instance:assertion.AssertionClass@1f57539]" name="B" duration-ms="4" started-at="2022-05-04T09:25:26 IST" finished-at="2022-05-04T09:25:26 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[User is displayed after deletion expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: User is displayed after deletion expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertFalse(Assert.java:67)
at assertion.AssertionClass.B(AssertionClass.java:18)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- B -->
        <test-method status="FAIL" signature="verifyUserCanUploadFile()[pri:0, instance:assertion.AssertionClass@1f57539]" name="verifyUserCanUploadFile" duration-ms="5" started-at="2022-05-04T09:25:26 IST" finished-at="2022-05-04T09:25:26 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Object got initialized falsly expected [null] but found [ktctc.DM21MavenProject.FileUploadClass@79360a39]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Object got initialized falsly expected [null] but found [ktctc.DM21MavenProject.FileUploadClass@79360a39]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotSame(Assert.java:1033)
at org.testng.Assert.assertNull(Assert.java:965)
at assertion.AssertionClass.verifyUserCanUploadFile(AssertionClass.java:43)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanUploadFile -->
        <test-method status="PASS" signature="zTestCase()[pri:0, instance:assertion.AssertionClass@1f57539]" name="zTestCase" duration-ms="98" started-at="2022-05-04T09:25:26 IST" finished-at="2022-05-04T09:25:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- zTestCase -->
      </class> <!-- assertion.AssertionClass -->
      <class name="dependent.DependentTestCasesInTestNG">
        <test-method status="PASS" signature="verifyUserCanBeAdded()[pri:0, instance:dependent.DependentTestCasesInTestNG@2781e022]" name="verifyUserCanBeAdded" duration-ms="4" started-at="2022-05-04T09:25:26 IST" finished-at="2022-05-04T09:25:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanBeAdded -->
        <test-method status="FAIL" signature="verifyUserCanBeEdited()[pri:0, instance:dependent.DependentTestCasesInTestNG@2781e022]" name="verifyUserCanBeEdited" duration-ms="11" started-at="2022-05-04T09:25:27 IST" depends-on-methods="dependent.DependentTestCasesInTestNG.verifyUserCanBeAdded" finished-at="2022-05-04T09:25:27 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at dependent.DependentTestCasesInTestNG.verifyUserCanBeEdited(DependentTestCasesInTestNG.java:19)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanBeEdited -->
        <test-method status="SKIP" signature="verifyUserCanBeDeleted()[pri:0, instance:dependent.DependentTestCasesInTestNG@2781e022]" name="verifyUserCanBeDeleted" duration-ms="0" started-at="2022-05-04T09:25:27 IST" depends-on-methods="dependent.DependentTestCasesInTestNG.verifyUserCanBeAdded, dependent.DependentTestCasesInTestNG.verifyUserCanBeEdited" finished-at="2022-05-04T09:25:27 IST">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method DependentTestCasesInTestNG.verifyUserCanBeDeleted()[pri:0, instance:dependent.DependentTestCasesInTestNG@2781e022] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method DependentTestCasesInTestNG.verifyUserCanBeDeleted()[pri:0, instance:dependent.DependentTestCasesInTestNG@2781e022] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanBeDeleted -->
      </class> <!-- dependent.DependentTestCasesInTestNG -->
    </test> <!-- Regression -->
    <test name="Smoke" duration-ms="22016" started-at="2022-05-04T09:25:44 IST" finished-at="2022-05-04T09:26:06 IST">
      <class name="ktctc.DM21MavenProject.Sample">
        <test-method status="PASS" signature="beforeSuiteAnnotation()[pri:0, instance:ktctc.DM21MavenProject.Sample@32d2fa64]" name="beforeSuiteAnnotation" is-config="true" duration-ms="15" started-at="2022-05-04T09:25:26 IST" finished-at="2022-05-04T09:25:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuiteAnnotation -->
        <test-method status="PASS" signature="beforeTestAnnotation()[pri:0, instance:ktctc.DM21MavenProject.Sample@32d2fa64]" name="beforeTestAnnotation" is-config="true" duration-ms="0" started-at="2022-05-04T09:25:44 IST" finished-at="2022-05-04T09:25:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestAnnotation -->
        <test-method status="PASS" signature="beforeClassAnnotation()[pri:0, instance:ktctc.DM21MavenProject.Sample@32d2fa64]" name="beforeClassAnnotation" is-config="true" duration-ms="0" started-at="2022-05-04T09:25:44 IST" finished-at="2022-05-04T09:25:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassAnnotation -->
        <test-method status="PASS" signature="verifyUserCanUploadFile()[pri:0, instance:ktctc.DM21MavenProject.Sample@32d2fa64]" name="verifyUserCanUploadFile" duration-ms="1" started-at="2022-05-04T09:25:44 IST" finished-at="2022-05-04T09:25:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanUploadFile -->
        <test-method status="PASS" signature="beforeMethodAnnotation()[pri:0, instance:ktctc.DM21MavenProject.Sample@32d2fa64]" name="beforeMethodAnnotation" is-config="true" duration-ms="0" started-at="2022-05-04T09:25:44 IST" finished-at="2022-05-04T09:25:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodAnnotation -->
        <test-method status="PASS" signature="afterMethodAnnotation()[pri:0, instance:ktctc.DM21MavenProject.Sample@32d2fa64]" name="afterMethodAnnotation" is-config="true" duration-ms="19" started-at="2022-05-04T09:25:44 IST" finished-at="2022-05-04T09:25:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodAnnotation -->
        <test-method status="PASS" signature="afterClassAnnotation()[pri:0, instance:ktctc.DM21MavenProject.Sample@32d2fa64]" name="afterClassAnnotation" is-config="true" duration-ms="3" started-at="2022-05-04T09:25:44 IST" finished-at="2022-05-04T09:25:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassAnnotation -->
        <test-method status="PASS" signature="afterTestAnnotation()[pri:0, instance:ktctc.DM21MavenProject.Sample@32d2fa64]" name="afterTestAnnotation" is-config="true" duration-ms="2" started-at="2022-05-04T09:26:06 IST" finished-at="2022-05-04T09:26:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTestAnnotation -->
        <test-method status="PASS" signature="afterSuiteAnnotation()[pri:0, instance:ktctc.DM21MavenProject.Sample@32d2fa64]" name="afterSuiteAnnotation" is-config="true" duration-ms="0" started-at="2022-05-04T09:26:06 IST" finished-at="2022-05-04T09:26:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuiteAnnotation -->
      </class> <!-- ktctc.DM21MavenProject.Sample -->
      <class name="brockenlink.BrockenLinkClass5">
        <test-method status="FAIL" signature="verifyURLIsBrockenOrNot()[pri:0, instance:brockenlink.BrockenLinkClass5@1d8d30f7]" name="verifyURLIsBrockenOrNot" duration-ms="21973" started-at="2022-05-04T09:25:44 IST" finished-at="2022-05-04T09:26:06 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
https://demoqa.com/bad-request is brocken with Response code = 400 And response message = Bad Request expected [true] but found [false],
https://demoqa.com/unauthorized is brocken with Response code = 401 And response message = Unauthorized expected [true] but found [false],
https://demoqa.com/forbidden is brocken with Response code = 403 And response message = Forbidden expected [true] but found [false],
https://demoqa.com/invalid-url is brocken with Response code = 404 And response message = Not Found expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
https://demoqa.com/bad-request is brocken with Response code = 400 And response message = Bad Request expected [true] but found [false],
https://demoqa.com/unauthorized is brocken with Response code = 401 And response message = Unauthorized expected [true] but found [false],
https://demoqa.com/forbidden is brocken with Response code = 403 And response message = Forbidden expected [true] but found [false],
https://demoqa.com/invalid-url is brocken with Response code = 404 And response message = Not Found expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at brockenlink.BrockenLinkClass5.verifyURLIsBrockenOrNot(BrockenLinkClass5.java:58)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyURLIsBrockenOrNot -->
      </class> <!-- brockenlink.BrockenLinkClass5 -->
    </test> <!-- Smoke -->
  </suite> <!-- BankingApplicationAutomationSuite -->
</testng-results>
